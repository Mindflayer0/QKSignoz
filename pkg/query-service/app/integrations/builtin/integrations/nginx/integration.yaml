id: nginx
title: Nginx
description: Monitor nginx using logs and connection and request metrics.
author:
  name: SigNoz
  email: integrations@signoz.io
  homepage: https://signoz.io
icon: file://icon.svg
catagories:
  - Ingress
  - HTTP
overview: file://overview.md
configuration:
  - title: Prepare Nginx
    instructions: file://config/prepare-nginx.md
  - title: Configure Otel Collector
    instructions: file://config/configure-otel-collector.md
assets:
  logs:
    pipelines:
      - id: parse-default-nginx-access-log
        name: Parse default nginx access log
        alias: parse-default-nginx-access-log
        description: Parse standard nginx access log
        filter:
          op: AND
          items:
            - key:
                type: tag
                key: source
                data_type: string
              op: "="
              value: nginx
        config:
          - type: grok_parser
            id: parse-body-grok
            orderId: 1
            enabled: true
            name: Parse Body
            parse_to: attributes
            pattern: %{IP:client.address} - %{USERNAME:enduser.id} \[%{HTTPDATE:time.local}\] "((%{WORD:http.method} %{DATA:http.path}(\?%{DATA:http.query})? %{WORD:network.protocol.name}/%{NOTSPACE:network.protocol.version})|%{DATA})" %{INT:http.response.status_code:int} %{INT:http.request.body.bytes:int} "%{NOTSPACE:http.referer}" "%{DATA:http.user.agent}" %{INT:http.request.bytes:int} %{NUMBER:http.request.time:float} \[%{DATA:proxy.upstream.name}?\] \[%{DATA:proxy.alternative.upstream.name}?\] ((%{IP:network.peer.address}:%{INT:network.peer.port:int})|%{DATA})? (%{INT:http.response.bytes:int}|-)? (%{NUMBER:http.response.time:float}|-)? (%{NUMBER:network.peer.status.code:int}|-)? %{NOTSPACE:request.id}
            parse_from: body
          - type: severity_parser
            id: parse-sev
            orderId: 2
            enabled: true
            name: Set Severity
            parse_from: attributes["http.response.status_code"]
            mapping:
              debug:
                - 1xx
              error:
                - 4xx
              fatal:
                - 5xx
              info:
                - 2xx
              trace:
                - trace
              warn:
                - 3xx
            overwrite_text: true
  dashboards:
  alerts:
connection_tests:
  logs:
    op: AND
    items:
      - key:
          type: tag
          key: source
          data_type: string
        op: "="
        value: nginx
data_collected:
  logs:
    - name: Request Method
      path: attributes["http.request.method"]
      type: string
      description: HTTP method
    - name: Request Path
      path: attributes["url.path"]
      type: string
      description: path requested
    - name: Response Status Code
      path: attributes["http.response.status_code"]
      type: int
      description: HTTP response code
  metrics:
    - name: http.server.request.duration
      type: Histogram
      unit: s
      description: Duration of HTTP server requests
    - name: http.server.active_requests
      type: UpDownCounter
      unit: { request }
      description: Number of active HTTP server requests
