# Base stage for building the query-service binary
FROM golang:1.21-bookworm AS builder

# LD_FLAGS and TARGETPLATFORM are passed as arguments
ARG LD_FLAGS
ARG TARGETPLATFORM

ENV CGO_ENABLED=1
ENV GOPATH=/go

# Set GOOS and GOARCH based on TARGETPLATFORM
RUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \
    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)

# Prepare and enter src directory
WORKDIR /go/src/github.com/signoz/signoz

# Add the sources and proceed with build
ADD . .
RUN cd ee/query-service \
    && go build -tags timetzdata -a -o ./bin/query-service \
    -ldflags "-linkmode external -extldflags '-static' -s -w $LD_FLAGS" \
    && chmod +x ./bin/query-service

# Development stage
FROM alpine:3.18.6 AS development

# Add Maintainer Info
LABEL maintainer="signoz"

# add ca-certificates in case you need them
RUN apk update && apk add ca-certificates && rm -rf /var/cache/apk/*

# set working directory
WORKDIR /root

# Copy the binary from the builder stage for development
COPY --from=builder /go/src/github.com/signoz/signoz/ee/query-service/bin/query-service /root/query-service

# copy prometheus YAML config
COPY pkg/query-service/config/prometheus.yml /root/config/prometheus.yml
COPY pkg/query-service/templates /root/templates

# Make query-service executable for non-root users
RUN chmod 755 /root /root/query-service

ENTRYPOINT ["./query-service"]
CMD ["-config", "/root/config/prometheus.yml"]
EXPOSE 8080
